// Generated by view binder compiler. Do not edit!
package com.example.unibody.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.unibody.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPersonBasicInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView birthTv;

  @NonNull
  public final NumberPicker dayPicker;

  @NonNull
  public final CardView femaleCard;

  @NonNull
  public final ImageView femaleImage;

  @NonNull
  public final NumberPicker heightPicker;

  @NonNull
  public final TextView heightTv;

  @NonNull
  public final LinearLayout l1;

  @NonNull
  public final CardView maleCard;

  @NonNull
  public final ImageView maleImage;

  @NonNull
  public final NumberPicker monthPicker;

  @NonNull
  public final NumberPicker yearPicker;

  private FragmentPersonBasicInfoBinding(@NonNull LinearLayout rootView, @NonNull TextView birthTv,
      @NonNull NumberPicker dayPicker, @NonNull CardView femaleCard, @NonNull ImageView femaleImage,
      @NonNull NumberPicker heightPicker, @NonNull TextView heightTv, @NonNull LinearLayout l1,
      @NonNull CardView maleCard, @NonNull ImageView maleImage, @NonNull NumberPicker monthPicker,
      @NonNull NumberPicker yearPicker) {
    this.rootView = rootView;
    this.birthTv = birthTv;
    this.dayPicker = dayPicker;
    this.femaleCard = femaleCard;
    this.femaleImage = femaleImage;
    this.heightPicker = heightPicker;
    this.heightTv = heightTv;
    this.l1 = l1;
    this.maleCard = maleCard;
    this.maleImage = maleImage;
    this.monthPicker = monthPicker;
    this.yearPicker = yearPicker;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPersonBasicInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPersonBasicInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_person_basic_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPersonBasicInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.birth_tv;
      TextView birthTv = ViewBindings.findChildViewById(rootView, id);
      if (birthTv == null) {
        break missingId;
      }

      id = R.id.day_picker;
      NumberPicker dayPicker = ViewBindings.findChildViewById(rootView, id);
      if (dayPicker == null) {
        break missingId;
      }

      id = R.id.female_card;
      CardView femaleCard = ViewBindings.findChildViewById(rootView, id);
      if (femaleCard == null) {
        break missingId;
      }

      id = R.id.female_image;
      ImageView femaleImage = ViewBindings.findChildViewById(rootView, id);
      if (femaleImage == null) {
        break missingId;
      }

      id = R.id.height_picker;
      NumberPicker heightPicker = ViewBindings.findChildViewById(rootView, id);
      if (heightPicker == null) {
        break missingId;
      }

      id = R.id.height_tv;
      TextView heightTv = ViewBindings.findChildViewById(rootView, id);
      if (heightTv == null) {
        break missingId;
      }

      id = R.id.l1;
      LinearLayout l1 = ViewBindings.findChildViewById(rootView, id);
      if (l1 == null) {
        break missingId;
      }

      id = R.id.male_card;
      CardView maleCard = ViewBindings.findChildViewById(rootView, id);
      if (maleCard == null) {
        break missingId;
      }

      id = R.id.male_image;
      ImageView maleImage = ViewBindings.findChildViewById(rootView, id);
      if (maleImage == null) {
        break missingId;
      }

      id = R.id.month_picker;
      NumberPicker monthPicker = ViewBindings.findChildViewById(rootView, id);
      if (monthPicker == null) {
        break missingId;
      }

      id = R.id.year_picker;
      NumberPicker yearPicker = ViewBindings.findChildViewById(rootView, id);
      if (yearPicker == null) {
        break missingId;
      }

      return new FragmentPersonBasicInfoBinding((LinearLayout) rootView, birthTv, dayPicker,
          femaleCard, femaleImage, heightPicker, heightTv, l1, maleCard, maleImage, monthPicker,
          yearPicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
