// Generated by view binder compiler. Do not edit!
package com.example.unibody.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.unibody.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInfoStatusBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView datingCard;

  @NonNull
  public final ImageView datingImage;

  @NonNull
  public final CardView singleCard;

  @NonNull
  public final ImageView singleImage;

  @NonNull
  public final CardView unknownCard;

  @NonNull
  public final ImageView unknownImage;

  private FragmentInfoStatusBinding(@NonNull LinearLayout rootView, @NonNull CardView datingCard,
      @NonNull ImageView datingImage, @NonNull CardView singleCard, @NonNull ImageView singleImage,
      @NonNull CardView unknownCard, @NonNull ImageView unknownImage) {
    this.rootView = rootView;
    this.datingCard = datingCard;
    this.datingImage = datingImage;
    this.singleCard = singleCard;
    this.singleImage = singleImage;
    this.unknownCard = unknownCard;
    this.unknownImage = unknownImage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInfoStatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInfoStatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_info_status, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInfoStatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dating_card;
      CardView datingCard = ViewBindings.findChildViewById(rootView, id);
      if (datingCard == null) {
        break missingId;
      }

      id = R.id.dating_image;
      ImageView datingImage = ViewBindings.findChildViewById(rootView, id);
      if (datingImage == null) {
        break missingId;
      }

      id = R.id.single_card;
      CardView singleCard = ViewBindings.findChildViewById(rootView, id);
      if (singleCard == null) {
        break missingId;
      }

      id = R.id.single_image;
      ImageView singleImage = ViewBindings.findChildViewById(rootView, id);
      if (singleImage == null) {
        break missingId;
      }

      id = R.id.unknown_card;
      CardView unknownCard = ViewBindings.findChildViewById(rootView, id);
      if (unknownCard == null) {
        break missingId;
      }

      id = R.id.unknown_image;
      ImageView unknownImage = ViewBindings.findChildViewById(rootView, id);
      if (unknownImage == null) {
        break missingId;
      }

      return new FragmentInfoStatusBinding((LinearLayout) rootView, datingCard, datingImage,
          singleCard, singleImage, unknownCard, unknownImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
