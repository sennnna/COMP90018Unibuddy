// Generated by view binder compiler. Do not edit!
package com.example.unibody.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.unibody.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText codeEdit;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final EditText phoneNumberEdit;

  @NonNull
  public final TextView sendCodeTv;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull EditText codeEdit,
      @NonNull Button loginBtn, @NonNull EditText phoneNumberEdit, @NonNull TextView sendCodeTv) {
    this.rootView = rootView;
    this.codeEdit = codeEdit;
    this.loginBtn = loginBtn;
    this.phoneNumberEdit = phoneNumberEdit;
    this.sendCodeTv = sendCodeTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.code_edit;
      EditText codeEdit = ViewBindings.findChildViewById(rootView, id);
      if (codeEdit == null) {
        break missingId;
      }

      id = R.id.login_btn;
      Button loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.phone_number_edit;
      EditText phoneNumberEdit = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberEdit == null) {
        break missingId;
      }

      id = R.id.send_code_tv;
      TextView sendCodeTv = ViewBindings.findChildViewById(rootView, id);
      if (sendCodeTv == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, codeEdit, loginBtn, phoneNumberEdit,
          sendCodeTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
